'use client';

import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { usePathname } from 'next/navigation';
import { useCart } from '@/contexts/CartContext';
import { useTranslation } from '@/hooks/useTranslation';
import { LanguageSwitcher } from '@/components/ui/LanguageSwitcher';

export function Header() {
  const { itemsCount } = useCart();
  const { t } = useTranslation();
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [isScrolled, setIsScrolled] = useState(false);
  const pathname = usePathname();

  // Helper function to check if a path is active
  const isActive = (path: string) => {
    if (path === '/') {
      return pathname === '/';
    }
    return pathname.startsWith(path);
  };

  // Scroll to contact section function
  const scrollToContact = () => {
    const contactSection = document.getElementById('contact');
    if (contactSection) {
      contactSection.scrollIntoView({ behavior: 'smooth' });
    } else {
      // If not on homepage, navigate to homepage first then scroll
      if (pathname !== '/') {
        window.location.href = '/#contact';
      }
    }
  };

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 20);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // Handle body scroll when mobile menu is open
  useEffect(() => {
    if (isMenuOpen) {
      document.body.style.overflow = 'hidden';
    } else {
      document.body.style.overflow = 'unset';
    }

    // Cleanup on unmount
    return () => {
      document.body.style.overflow = 'unset';
    };
  }, [isMenuOpen]);

  return (
    <header className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
      isScrolled 
        ? 'bg-white/95 backdrop-blur-xl shadow-2xl border-b border-primary-200/50' 
        : 'bg-white/80 backdrop-blur-md shadow-lg border-b border-primary-200/30'
    }`}>
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-14 xs:h-16 sm:h-20">
          {/* Logo - Responsive */}
          <Link href="/" className="flex items-center group flex-shrink-0">
            <div className="relative">
              <div className="w-10 h-10 sm:w-12 sm:h-12 bg-gradient-to-br from-accent-500 to-accent-600 rounded-xl sm:rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300 transform group-hover:scale-105">
                <div className="absolute inset-0 bg-white/20 rounded-xl sm:rounded-2xl backdrop-blur-sm"></div>
                <svg className="w-5 h-5 sm:w-7 sm:h-7 text-white relative z-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                </svg>
              </div>
              <div className="absolute -top-0.5 -right-0.5 sm:-top-1 sm:-right-1 w-3 h-3 sm:w-4 sm:h-4 bg-gradient-to-br from-primary-500 to-primary-600 rounded-full animate-pulse"></div>
            </div>
            <div className="ml-2 sm:ml-4 hidden xs:block">
              <span className="text-lg sm:text-2xl font-bold bg-gradient-to-r from-primary-800 to-accent-700 bg-clip-text text-transparent">
                OurStore
              </span>
              <div className="text-xs text-primary-600 font-medium -mt-1 hidden sm:block">{t('header.tagline')}</div>
            </div>
            {/* Mobile-only compact logo text */}
            <div className="ml-2 xs:hidden">
              <span className="text-lg font-bold bg-gradient-to-r from-primary-800 to-accent-700 bg-clip-text text-transparent">
                Store
              </span>
            </div>
          </Link>

          {/* Desktop Navigation */}
          <nav className="hidden lg:flex items-center space-x-1 xl:space-x-2">
            <Link 
              href="/" 
              className={`group relative px-3 xl:px-4 py-2 xl:py-3 transition-all duration-300 font-semibold rounded-lg xl:rounded-xl ${
                isActive('/') 
                  ? 'text-accent-600 bg-gradient-to-r from-accent-100 to-primary-100 shadow-md' 
                  : 'text-primary-700 hover:text-accent-600 hover:bg-primary-50/50'
              }`}
            >
              <span className="relative z-10 flex items-center gap-1 xl:gap-2">
                <svg className={`w-4 h-4 xl:w-5 xl:h-5 group-hover:rotate-12 transition-transform duration-300 ${isActive('/') ? 'rotate-6' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                <span className="hidden xl:inline">{t('navigation.home')}</span>
                <span className="xl:hidden">{t('navigation.home')}</span>
              </span>
              {!isActive('/') && (
                <div className="absolute inset-0 bg-gradient-to-r from-accent-100 to-primary-100 rounded-lg xl:rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              )}
            </Link>

            <Link 
              href="/products" 
              className={`group relative px-3 xl:px-4 py-2 xl:py-3 transition-all duration-300 font-semibold rounded-lg xl:rounded-xl ${
                isActive('/products') 
                  ? 'text-accent-600 bg-gradient-to-r from-accent-100 to-primary-100 shadow-md' 
                  : 'text-primary-700 hover:text-accent-600 hover:bg-primary-50/50'
              }`}
            >
              <span className="relative z-10 flex items-center gap-1 xl:gap-2">
                <svg className={`w-4 h-4 xl:w-5 xl:h-5 group-hover:rotate-12 transition-transform duration-300 ${isActive('/products') ? 'rotate-6' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                </svg>
                <span className="hidden xl:inline">{t('navigation.products')}</span>
                <span className="xl:hidden">Shop</span>
              </span>
              {!isActive('/products') && (
                <div className="absolute inset-0 bg-gradient-to-r from-accent-100 to-primary-100 rounded-lg xl:rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              )}
            </Link>
            
            <Link 
              href="/cart" 
              className={`group relative px-3 xl:px-4 py-2 xl:py-3 transition-all duration-300 font-semibold rounded-lg xl:rounded-xl ${
                isActive('/cart') 
                  ? 'text-accent-600 bg-gradient-to-r from-accent-100 to-primary-100 shadow-md' 
                  : 'text-primary-700 hover:text-accent-600 hover:bg-primary-50/50'
              }`}
            >
              <span className="relative z-10 flex items-center gap-1 xl:gap-2">
                <div className="relative">
                  <svg className={`w-4 h-4 xl:w-5 xl:h-5 group-hover:scale-110 transition-transform duration-300 ${isActive('/cart') ? 'scale-105' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                  </svg>
                  {itemsCount > 0 && (
                    <span className="absolute -top-1 -right-1 xl:-top-2 xl:-right-2 bg-gradient-to-r from-accent-500 to-accent-600 text-white text-xs font-bold rounded-full h-4 w-4 xl:h-5 xl:w-5 flex items-center justify-center shadow-lg animate-pulse">
                      {itemsCount}
                    </span>
                  )}
                </div>
                <span className="hidden xl:inline">{t('navigation.cart')}</span>
                <span className="xl:hidden">{t('navigation.cart')}</span>
              </span>
              {!isActive('/cart') && (
                <div className="absolute inset-0 bg-gradient-to-r from-accent-100 to-primary-100 rounded-lg xl:rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              )}
            </Link>

            {/* Language Switcher */}
            <div className="ml-2 xl:ml-4">
              <LanguageSwitcher />
            </div>

            {/* Contact Button */}
            <div className="ml-2 xl:ml-4">
              <button 
                onClick={scrollToContact}
                className="group relative px-3 xl:px-6 py-2 xl:py-3 bg-gradient-to-r from-accent-500 to-accent-600 hover:from-accent-600 hover:to-accent-700 text-white font-bold rounded-lg xl:rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 overflow-hidden"
              >
                <div className="absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-700"></div>
                <span className="relative flex items-center gap-1 xl:gap-2">
                  <svg className="w-4 h-4 xl:w-5 xl:h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                  <span className="hidden xl:inline">{t('navigation.contact')}</span>
                </span>
              </button>
            </div>
          </nav>

          {/* Tablet Navigation - Icons only */}
          <nav className="hidden md:flex lg:hidden items-center space-x-1">
            <Link 
              href="/" 
              className={`group relative p-3 transition-all duration-300 rounded-xl ${
                isActive('/') 
                  ? 'text-accent-600 bg-gradient-to-r from-accent-100 to-primary-100 shadow-md' 
                  : 'text-primary-700 hover:text-primary-800 hover:bg-accent-100'
              }`}
              title="Home"
            >
              <svg className={`w-5 h-5 relative z-10 group-hover:rotate-12 transition-transform duration-300 ${isActive('/') ? 'rotate-6' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
              </svg>
            </Link>

            <Link 
              href="/products" 
              className={`group relative p-3 transition-all duration-300 rounded-xl ${
                isActive('/products') 
                  ? 'text-accent-600 bg-gradient-to-r from-accent-100 to-primary-100 shadow-md' 
                  : 'text-primary-700 hover:text-primary-800 hover:bg-accent-100'
              }`}
              title="Products"
            >
              <svg className={`w-5 h-5 relative z-10 group-hover:rotate-12 transition-transform duration-300 ${isActive('/products') ? 'rotate-6' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
              </svg>
            </Link>
            
            <Link 
              href="/cart" 
              className={`group relative p-3 transition-all duration-300 rounded-xl ${
                isActive('/cart') 
                  ? 'text-accent-600 bg-gradient-to-r from-accent-100 to-primary-100 shadow-md' 
                  : 'text-primary-700 hover:text-primary-800 hover:bg-accent-100'
              }`}
              title={t('navigation.cart')}
            >
              <div className="relative z-10">
                <svg className={`w-5 h-5 group-hover:scale-110 transition-transform duration-300 ${isActive('/cart') ? 'scale-105' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                </svg>
                {itemsCount > 0 && (
                  <span className="absolute -top-1 -right-1 bg-gradient-to-r from-accent-500 to-accent-600 text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center shadow-lg animate-pulse">
                    {itemsCount}
                  </span>
                )}
              </div>
            </Link>

            {/* Language Switcher */}
            <LanguageSwitcher />

            <button 
              onClick={scrollToContact}
              className="group relative p-3 bg-gradient-to-r from-accent-500 to-accent-600 hover:from-accent-600 hover:to-accent-700 text-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 overflow-hidden"
              title={t('navigation.contact')}
            >
              <div className="absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-700"></div>
              <svg className="w-5 h-5 relative" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
            </button>
          </nav>

          {/* Mobile menu button */}
          <div className="flex items-center gap-2 md:hidden">
            {/* Language Switcher for mobile */}
            <div className="hidden sm:block">
              <LanguageSwitcher />
            </div>
            
            {/* Cart icon for mobile */}
            <Link 
              href="/cart" 
              className={`relative p-2 transition-all duration-300 rounded-lg ${
                isActive('/cart') 
                  ? 'text-accent-600 bg-gradient-to-r from-accent-100 to-primary-100 shadow-md' 
                  : 'text-primary-700 hover:text-accent-600 hover:bg-primary-100'
              }`}
            >
              <svg className={`w-5 h-5 ${isActive('/cart') ? 'scale-105' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
              </svg>
              {itemsCount > 0 && (
                <span className="absolute -top-1 -right-1 bg-gradient-to-r from-accent-500 to-accent-600 text-white text-xs font-bold rounded-full h-4 w-4 flex items-center justify-center shadow-lg animate-pulse">
                  {itemsCount}
                </span>
              )}
            </Link>

            {/* Menu button */}
            <button
              className={`p-2 rounded-lg transition-all duration-300 ${
                isMenuOpen 
                  ? 'bg-accent-100 text-accent-700' 
                  : 'text-primary-700 hover:bg-primary-100 hover:text-accent-600'
              }`}
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              aria-label="Toggle menu"
            >
              <svg 
                className={`h-5 w-5 transition-transform duration-300 ${isMenuOpen ? 'rotate-180' : ''}`} 
                fill="none" 
                stroke="currentColor" 
                viewBox="0 0 24 24"
              >
                {isMenuOpen ? (
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                ) : (
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                )}
              </svg>
            </button>
          </div>
        </div>

        {/* Mobile Navigation Overlay */}
        {isMenuOpen && (
          <div className="fixed inset-0 z-[100] md:hidden">
            {/* Backdrop */}
            <div 
              className="absolute inset-0 bg-black/60 backdrop-blur-sm"
              onClick={() => setIsMenuOpen(false)}
            />
            
            {/* Sidebar Menu */}
            <div className="absolute top-0 right-0 h-full w-80 max-w-[90vw] bg-white shadow-2xl overflow-hidden">
              {/* Header */}
              <div className="flex items-center justify-between p-4 bg-gradient-to-r from-primary-50 to-accent-50 border-b border-gray-200">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-gradient-to-br from-accent-500 to-accent-600 rounded-lg flex items-center justify-center shadow-lg">
                    <svg className="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                    </svg>
                  </div>
                  <span className="text-lg font-bold bg-gradient-to-r from-primary-800 to-accent-700 bg-clip-text text-transparent">
                    OurStore
                  </span>
                </div>
                <button
                  onClick={() => setIsMenuOpen(false)}
                  className="p-2 rounded-lg text-gray-500 hover:bg-gray-100 transition-colors"
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>

              {/* Menu Content */}
              <div className="flex flex-col h-full">
                {/* Main Navigation */}
                <div className="flex-1 overflow-y-auto p-4">
                  <nav className="space-y-2">
                    {/* Home */}
                    <Link 
                      href="/" 
                      className={`flex items-center space-x-3 px-4 py-3 rounded-lg transition-colors ${
                        isActive('/') 
                          ? 'text-accent-600 bg-accent-50' 
                          : 'text-gray-700 hover:text-accent-600 hover:bg-gray-50'
                      }`}
                      onClick={() => setIsMenuOpen(false)}
                    >
                      <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                      </svg>
                      <span className="font-medium">{t('navigation.home')}</span>
                    </Link>

                    {/* Products */}
                    <Link 
                      href="/products" 
                      className={`flex items-center space-x-3 px-4 py-3 rounded-lg transition-colors ${
                        isActive('/products') 
                          ? 'text-accent-600 bg-accent-50' 
                          : 'text-gray-700 hover:text-accent-600 hover:bg-gray-50'
                      }`}
                      onClick={() => setIsMenuOpen(false)}
                    >
                      <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                      </svg>
                      <span className="font-medium">{t('navigation.products')}</span>
                    </Link>

                    {/* Categories */}
                    <div className="pt-2">
                      <div className="px-4 py-2 text-sm font-medium text-gray-500 uppercase tracking-wider">
                        {t('navigation.categories')}
                      </div>
                      <div className="ml-6 space-y-1">
                        <Link 
                          href="/products?category=clothes" 
                          className="flex items-center space-x-3 px-4 py-2 text-sm rounded-lg text-gray-600 hover:text-accent-600 hover:bg-gray-50 transition-colors"
                          onClick={() => setIsMenuOpen(false)}
                        >
                          <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                          </svg>
                          <span>{t('products.categories.clothes')}</span>
                        </Link>
                        <Link 
                          href="/products?category=tech" 
                          className="flex items-center space-x-3 px-4 py-2 text-sm rounded-lg text-gray-600 hover:text-accent-600 hover:bg-gray-50 transition-colors"
                          onClick={() => setIsMenuOpen(false)}
                        >
                          <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
                          </svg>
                          <span>{t('products.categories.tech')}</span>
                        </Link>
                        <Link 
                          href="/products?category=beauty" 
                          className="flex items-center space-x-3 px-4 py-2 text-sm rounded-lg text-gray-600 hover:text-accent-600 hover:bg-gray-50 transition-colors"
                          onClick={() => setIsMenuOpen(false)}
                        >
                          <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                          </svg>
                          <span>{t('products.categories.beauty')}</span>
                        </Link>
                      </div>
                    </div>

                    {/* Cart */}
                    <Link 
                      href="/cart" 
                      className={`flex items-center space-x-3 px-4 py-3 rounded-lg transition-colors ${
                        isActive('/cart') 
                          ? 'text-accent-600 bg-accent-50' 
                          : 'text-gray-700 hover:text-accent-600 hover:bg-gray-50'
                      }`}
                      onClick={() => setIsMenuOpen(false)}
                    >
                      <div className="relative">
                        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                        {itemsCount > 0 && (
                          <span className="absolute -top-1 -right-1 bg-accent-500 text-white text-xs font-bold rounded-full h-4 w-4 flex items-center justify-center">
                            {itemsCount}
                          </span>
                        )}
                      </div>
                      <span className="font-medium">{t('navigation.cart')}</span>
                    </Link>
                  </nav>
                </div>

                {/* Bottom Section */}
                <div className="flex-shrink-0 border-t border-gray-200 p-4 space-y-4 bg-gray-50">
                  {/* Contact Button */}
                  <button 
                    className="w-full flex items-center justify-center space-x-2 px-4 py-3 bg-gradient-to-r from-accent-500 to-accent-600 hover:from-accent-600 hover:to-accent-700 text-white font-medium rounded-lg transition-all duration-200 shadow-lg"
                    onClick={() => {
                      setIsMenuOpen(false);
                      scrollToContact();
                    }}
                  >
                    <svg className="w-5 h-5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                    </svg>
                    <span>{t('navigation.contact')}</span>
                  </button>

                  {/* Language Switcher */}
                  <div className="text-center">
                    <div className="text-xs text-gray-500 mb-2">Language</div>
                    <LanguageSwitcher />
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
            {/* Sidebar Header */}
            <div className="flex items-center justify-between p-4 border-b border-primary-200/50 bg-gradient-to-r from-primary-50 to-accent-50">
              <div className="flex items-center">
                <div className="w-8 h-8 bg-gradient-to-br from-accent-500 to-accent-600 rounded-lg flex items-center justify-center shadow-lg">
                  <svg className="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                  </svg>
                </div>
                <span className="ml-2 text-lg font-bold bg-gradient-to-r from-primary-800 to-accent-700 bg-clip-text text-transparent">
                  OurStore
                </span>
              </div>
              <button
                onClick={() => setIsMenuOpen(false)}
                className="p-2 rounded-lg text-primary-600 hover:bg-primary-100 transition-colors duration-200"
              >
                <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
          </div>
        )}
      </div>
    </header>
  );
}