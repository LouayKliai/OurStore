#!/bin/bash

# OurStore Scripts Overview
# Shows available scripts and their usage

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${CYAN}üè™ OurStore Development Scripts${NC}"
echo "=================================="
echo ""

echo -e "${GREEN}üìã Available Scripts:${NC}"
echo ""

echo -e "${BLUE}1. üöÄ Full Setup (Linux/macOS):${NC}"
echo -e "   ${YELLOW}./scripts/setup.sh${NC}"
echo "   ‚Ä¢ Installs system dependencies (PostgreSQL, Python, Node.js)"
echo "   ‚Ä¢ Sets up Python virtual environment"
echo "   ‚Ä¢ Installs all dependencies"
echo "   ‚Ä¢ Configures database"
echo "   ‚Ä¢ Seeds with sample data"
echo ""

echo -e "${BLUE}2. üñ•Ô∏è Windows Setup:${NC}"
echo -e "   ${YELLOW}scripts\\setup_windows.bat${NC}"
echo "   ‚Ä¢ Windows equivalent of setup.sh"
echo ""

echo -e "${BLUE}3. üîÑ Restart Application:${NC}"
echo -e "   ${YELLOW}./scripts/restart.sh${NC}"
echo "   ‚Ä¢ Stops all running servers"
echo "   ‚Ä¢ Restarts both backend and frontend"
echo "   ‚Ä¢ Shows status and URLs"
echo ""

echo -e "${BLUE}4. üóÉÔ∏è Recreate Database:${NC}"
echo -e "   ${YELLOW}./scripts/recreate_db.sh${NC}"
echo "   ‚Ä¢ Drops and recreates database"
echo "   ‚Ä¢ Seeds with fresh sample data"
echo "   ‚Ä¢ Includes safety confirmation"
echo ""

echo -e "${BLUE}5. üß™ Run Tests:${NC}"
echo -e "   ${YELLOW}./scripts/test.sh${NC}"
echo "   ‚Ä¢ Comprehensive test suite"
echo "   ‚Ä¢ Tests backend, database, and frontend"
echo "   ‚Ä¢ Validates all functionality"
echo "   ‚Ä¢ Windows-specific setup script"
echo "   ‚Ä¢ Requires manual PostgreSQL installation"
echo ""

echo -e "${BLUE}3. üîß Backend Only Setup:${NC}"
echo -e "   ${YELLOW}./scripts/setup_backend.sh${NC}"
echo "   ‚Ä¢ Sets up only the Python/Flask backend"
echo "   ‚Ä¢ Good for backend-focused development"
echo ""

echo -e "${BLUE}4. ‚ñ∂Ô∏è Start Both Servers:${NC}"
echo -e "   ${YELLOW}./scripts/start.sh${NC}"
echo "   ‚Ä¢ Starts both frontend and backend servers"
echo "   ‚Ä¢ Runs in foreground with cleanup on Ctrl+C"
echo "   ‚Ä¢ Backend: http://localhost:5000"
echo "   ‚Ä¢ Frontend: http://localhost:3000 or :3001"
echo ""

echo -e "${BLUE}5. üêç Backend Development:${NC}"
echo -e "   ${YELLOW}cd Back && ./start_dev.sh${NC}"
echo "   ‚Ä¢ Quick start for backend development"
echo "   ‚Ä¢ Only starts the Flask API server"
echo ""

echo -e "${BLUE}6. üå± Database Seeding:${NC}"
echo -e "   ${YELLOW}cd Back && source venv/bin/activate && python seed_database.py${NC}"
echo "   ‚Ä¢ Populates database with realistic sample data"
echo "   ‚Ä¢ Creates 10 products, 4 customers, 15 orders, reviews"
echo "   ‚Ä¢ Admin login: admin/admin123"
echo ""

echo -e "${BLUE}7. ‚úÖ Validate Scripts:${NC}"
echo -e "   ${YELLOW}./scripts/validate.sh${NC}"
echo "   ‚Ä¢ Checks all scripts for correctness"
echo "   ‚Ä¢ Validates file references and dependencies"
echo ""

echo -e "${GREEN}üéØ Quick Start Workflow:${NC}"
echo "1. Run setup: ${YELLOW}./scripts/setup.sh${NC}"
echo "2. Start servers: ${YELLOW}./scripts/start.sh${NC}"
echo "3. Visit: ${YELLOW}http://localhost:3000${NC} (frontend) and ${YELLOW}http://localhost:5000/api/health${NC} (backend)"
echo ""

echo -e "${GREEN}üìä API Endpoints:${NC}"
echo "‚Ä¢ Health Check: ${YELLOW}http://localhost:5000/api/health${NC}"
echo "‚Ä¢ Products: ${YELLOW}http://localhost:5000/api/products${NC}"
echo "‚Ä¢ Admin Dashboard: ${YELLOW}http://localhost:5000/api/admin/dashboard${NC}"
echo "‚Ä¢ Orders: ${YELLOW}http://localhost:5000/api/orders${NC}"
echo ""

echo -e "${GREEN}üîß Development Commands:${NC}"
echo "‚Ä¢ Reset database: ${YELLOW}cd Back && python seed_database.py${NC}"
echo "‚Ä¢ Backend only: ${YELLOW}cd Back && python app.py${NC}"
echo "‚Ä¢ Frontend only: ${YELLOW}cd frontend && npm run dev${NC}"
echo ""

echo -e "${CYAN}All scripts are ready and validated! üéâ${NC}"